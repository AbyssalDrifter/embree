.TH "rtcSetGeometryDisplacementFunction" "3" "" "" "Embree Ray Tracing Kernels 3"
.SS NAME
.IP
.nf
\f[C]
rtcSetGeometryDisplacementFunction\ \-\ sets\ displacement\ function
\ \ for\ subdivision\ geometry
\f[]
.fi
.SS SYNOPSIS
.IP
.nf
\f[C]
#include\ <embree3/rtcore.h>

struct\ RTCDisplacementFunctionArguments
{
\ \ void*\ geomUserPtr;\ \ \ //!<\ pointer\ to\ user\ data\ of\ geometry
\ \ unsigned\ int\ geomID;\ //!<\ ID\ of\ geometry\ to\ displace
\ \ unsigned\ int\ primID;\ //!<\ ID\ of\ primitive\ of\ geometry\ to\ displace
\ \ unsigned\ int\ time;\ \ \ //!<\ time\ step\ to\ calculate\ displacement\ for
\ \ const\ float*\ u;\ \ \ \ \ \ //!<\ u\ coordinates\ (source)
\ \ const\ float*\ v;\ \ \ \ \ \ //!<\ v\ coordinates\ (source)
\ \ const\ float*\ nx;\ \ \ \ \ //!<\ x\ coordinates\ of\ normalized\ normal\ at\ point\ to\ displace\ (source)
\ \ const\ float*\ ny;\ \ \ \ \ //!<\ y\ coordinates\ of\ normalized\ normal\ at\ point\ to\ displace\ (source)
\ \ const\ float*\ nz;\ \ \ \ \ //!<\ z\ coordinates\ of\ normalized\ normal\ at\ point\ to\ displace\ (source)
\ \ float*\ px;\ \ \ \ \ \ \ \ \ \ \ //!<\ x\ coordinates\ of\ points\ to\ displace\ (source\ and\ target)
\ \ float*\ py;\ \ \ \ \ \ \ \ \ \ \ //!<\ y\ coordinates\ of\ points\ to\ displace\ (source\ and\ target)
\ \ float*\ pz;\ \ \ \ \ \ \ \ \ \ \ //!<\ z\ coordinates\ of\ points\ to\ displace\ (source\ and\ target)
\ \ unsigned\ int\ N;\ \ \ \ \ \ //!<\ number\ of\ points\ to\ displace
};

typedef\ void\ (*RTCDisplacementFunction)(const\ struct\ RTCDisplacementFunctionArguments*\ const\ args);

void\ rtcSetGeometryDisplacementFunction(RTCGeometry\ geometry,
\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ RTCDisplacementFunction\ func,
\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ struct\ RTCBounds*\ bounds);
\f[]
.fi
.SS DESCRIPTION
.PP
The \f[C]rtcSetGeometryDisplacementFunction\f[] function registers a
displacement callback function (\f[C]func\f[] argument) for the
specified subdivision geometry (\f[C]geometry\f[] argument).
Only a single callback function can get registered per geometry and
further invokations overwrite the previously set callback function.
Passing \f[C]NULL\f[] as function pointer disables the set callback
function again.
.PP
The registered displacement callback function is invoked to displace
points on the subdivision geometry during spatial acceleration structure
construction during the \f[C]rtcCommit\f[] call.
.PP
The callback function is invoked with a number of arguments stored
inside the \f[C]RTCDisplacementFunctionArguments\f[] structure.
The user data pointer of the geometry (\f[C]geomUserPtr\f[]) is provided
an can be used to point to the applications representation of the
subdivision mesh.
A number \f[C]N\f[] of points to displace are specified in a structure
of array layout.
For each point to displace the local patch UV coordinates (\f[C]u\f[]
and \f[C]v\f[] arrays), the normalized geometry normal (\f[C]nx\f[],
\f[C]ny\f[], and \f[C]nz\f[] arrays), as well as position (\f[C]px\f[],
\f[C]py\f[], and \f[C]pz\f[] arrays) are provided.
The task of the displacement function is to use this information and
change the position data.
.PP
The geometry ID (\f[C]geomID\f[]) and primitive ID (\f[C]primID\f[]) of
the patch to displace are additonally provided as well as the time step
\f[C]timeStep\f[] which can be important if the displacement is time
dependent and motion blur is used.
.PP
All passed arrays are guaranteed to be 64 bytes aligned, and properly
padded to make wide vector processing inside the displacement function
possible.
.PP
Also see tutorial [Displacement Geometry] for an example of how to use
the displacement mapping functions.
.SS EXIT STATUS
.PP
On failure an error code is set that can get queried using
\f[C]rtcDeviceGetError\f[].
.SS SEE ALSO
.PP
[RTC_GEOMETRY_TYPE_SUBDIVISION]
