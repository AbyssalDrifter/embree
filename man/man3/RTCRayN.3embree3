.TH "RTCRayN" "3" "" "" "Embree Ray Tracing Kernels 3"
.SS NAME
.IP
.nf
\f[C]
RTCRayN\ \-\ ray\ packet\ of\ runtime\ size
\f[]
.fi
.SS SYNOPSIS
.IP
.nf
\f[C]
#include\ <embree3/rtcore_ray.h>

struct\ RTCRayN;

float&\ RTCRayN_org_x(RTCRayN*\ rays,\ size_t\ N,\ size_t\ i);
float&\ RTCRayN_org_y(RTCRayN*\ rays,\ size_t\ N,\ size_t\ i);
float&\ RTCRayN_org_z(RTCRayN*\ rays,\ size_t\ N,\ size_t\ i);

float&\ RTCRayN_dir_x(RTCRayN*\ rays,\ size_t\ N,\ size_t\ i);
float&\ RTCRayN_dir_y(RTCRayN*\ rays,\ size_t\ N,\ size_t\ i);
float&\ RTCRayN_dir_z(RTCRayN*\ rays,\ size_t\ N,\ size_t\ i);

float&\ RTCRayN_tnear(RTCRayN*\ rays,\ size_t\ N,\ size_t\ i);
float&\ RTCRayN_tnear(RTCRayN*\ rays,\ size_t\ N,\ size_t\ i);

float&\ \ \ \ RTCRayN_time(RTCRayN*\ ptr,\ size_t\ N,\ size_t\ i);
unsigned&\ RTCRayN_mask(RTCRayN*\ ptr,\ size_t\ N,\ size_t\ i);

float&\ RTCRayN_Ng_x(RTCRayN*\ ptr,\ size_t\ N,\ size_t\ i);
float&\ RTCRayN_Ng_y(RTCRayN*\ ptr,\ size_t\ N,\ size_t\ i);
float&\ RTCRayN_Ng_z(RTCRayN*\ ptr,\ size_t\ N,\ size_t\ i);

float&\ RTCRayN_u\ \ \ (RTCRayN*\ ptr,\ size_t\ N,\ size_t\ i);
float&\ RTCRayN_v\ \ \ (RTCRayN*\ ptr,\ size_t\ N,\ size_t\ i);

unsigned&\ RTCRayN_instID(RTCRayN*\ ptr,\ size_t\ N,\ size_t\ i);
unsigned&\ RTCRayN_geomID(RTCRayN*\ ptr,\ size_t\ N,\ size_t\ i);
unsigned&\ RTCRayN_primID(RTCRayN*\ ptr,\ size_t\ N,\ size_t\ i);
\f[]
.fi
.SS DESCRIPTION
.PP
When the ray packet size is not known at compile time (e.g.
when Embree returns a ray packet in the \f[C]RTCFilterFuncN\f[] callback
function), Embree uses the \f[C]RTCRayN\f[] type for ray packets.
These ray packets can only have size 1, 4, 8, or 16, no other packet
size will get used.
.PP
You can either implement different special code paths for each of these
possible packet sizes and cast the ray to the appropiate ray packet
type, or implement one general code path that uses the
\f[C]RTCRay_XXX\f[] helper functions to access ray packet components.
.PP
These helper functions get a pointer to the ray packet (\f[C]ptr\f[]
argument), the packet size (\f[C]N\f[] argument), and returns a
reference to some component (e.g.
x\-component of origin) of the the ith ray of the packet (\f[C]i\f[]
argument).
.SS EXIT STATUS
.SS SEE ALSO
.PP
[RTCHitN]
