.TH "rtcIntersect1M" "3" "" "" "Embree Ray Tracing Kernels 3"
.SS NAME
.IP
.nf
\f[C]
rtcIntersect1M\ \-\ find\ closest\ hit\ for\ array\ of\ rays
\f[]
.fi
.SS SYNOPSIS
.IP
.nf
\f[C]
#include\ <embree3/rtcore.h>

void\ rtcIntersect1M(
\ \ RTCScene\ scene,
\ \ struct\ RTCIntersectContext*\ context,
\ \ struct\ RTCRay*\ rays,
\ \ const\ unsigned\ int\ M,
\ \ const\ size_t\ stride
);
\f[]
.fi
.SS DESCRIPTION
.PP
The \f[C]rtcIntersect1M\f[] function finds the closest hit of for a
stream of \f[C]M\f[] single rays (\f[C]rays\f[] argument) with the scene
(\f[C]scene\f[] argument).
The \f[C]rays\f[] argument points to an array of rays with specified
byte stride (\f[C]stride\f[] argument) between the rays.
The closest hit is returned inside the hit components of the rays.
See Section \f[C]RTCRay\f[] for a description of the ray layout and how
to setup a ray.
.PP
The intersection context (\f[C]context\f[] argument) can specify some
flags to optimize traversal and a filter callback function to be invoked
for every intersection.
Further the pointer to the intersection context is propagated to
callback functions invoked during traversal and can thus be used to
extend the ray with additional data.
See Section \f[C]RTCIntersectContext\f[] for more information.
.PP
The implementation of the stream ray query functions may re\-order rays
arbitrarily and re\-pack rays into ray packets of different size.
For this reason, callback functions may be invoked with an arbitrary
packet size (of size 1,4,8, or 16) and different ordering as specified
intially.
For this reason one may have to use the \f[C]rayID\f[] component of the
ray to identify the original ray, e.g.
to access a per ray payload.
.PP
A ray in a ray stream is considered inactive if its \f[C]tnear\f[] value
is larger than its \f[C]tfar\f[] value.
.PP
The stream size \f[C]M\f[] can be an arbitrary positive integer
including 0.
Each ray has to be aligned to 16 bytes.
.SS EXIT STATUS
.PP
For performance reasons this function does not do any error checks, thus
will not set any error flags on failure.
.SS SEE ALSO
.PP
[rtcOccluded1M]
